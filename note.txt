## Contruction de l'image Ã  l'aide de Packer
docker run -it --volume "/gcp-ws-openid/terraform":/terraform-code \
  --volume "/gcp-ws-openid/packer":/packer \
  --volume "/gcp-ws-openid/secrets":/secrets \
  --volume "/gcp-ws-openid/vars":/vars \
  --env TF_VAR_FILE=/vars/dev.tfvars \
  --env GOOGLE_PROJECT=rugged-shuttle-277619 \
  --env GOOGLE_APPLICATION_CREDENTIALS="/secrets/ws-openid.json" \
  --workdir /terraform-code/ \
  thegaragebandofit/infra-as-code-tools:gcl275-ter0.12.18-pac1.5.1
  
packer build -on-error=ask -var-file=ws-pedigree-dev-variables.json gcp_docker_debian_server.json

## Bastion
docker run -it --volume "/gcp-ws-openid/terraform":/terraform-code \
  --volume "/gcp-ws-openid/packer":/packer \
  --volume "/gcp-ws-openid/secrets":/secrets \
  --volume "/gcp-ws-openid/vars":/vars \
  --env TF_VAR_FILE=/vars/dev.tfvars \
  --env GOOGLE_PROJECT=rugged-shuttle-277619 \
  --env GOOGLE_APPLICATION_CREDENTIALS="/secrets/ws-openid.json" \
  --workdir /terraform-code/ \
  thegaragebandofit/infra-as-code-tools:latest
  
## Commande terraform
terraform force-unlock LOCK_ID 
terraform init --backend-config='/vars/backend-ws-pedigree-dev.hcl'
terraform plan --var-file='/vars/dev.tfvars'
terraform apply -auto-approve --var-file='/vars/dev.tfvars'
terraform destroy -auto-approve --var-file='/vars/dev.tfvars'
    
gcloud auth activate-service-account --project=rugged-shuttle-277619 --key-file=/secrets/ws-openid.json
gcloud compute project-info describe --project rugged-shuttle-277619
gcloud services list --available

gcloud services enable cloudresourcemanager.googleapis.com
gcloud services enable cloudbilling.googleapis.com
gcloud services enable container.googleapis.com
gcloud services enable containerregistry.googleapis.com
gcloud services enable iam.googleapis.com
gcloud services enable compute.googleapis.com

gcloud services enable serviceusage.googleapis.com
gcloud services enable servicenetworking.googleapis.com

gcloud services enable logging.googleapis.com

gcloud services enable sqladmin.googleapis.com

gcloud services enable storage-component.googleapis.com

gcloud services enable run.googleapis.com
gcloud services enable runtimeconfig.googleapis.com

## SSL
# https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs
gcloud compute ssl-certificates list \
        --global
gcloud compute ssl-certificates describe scc-docker-server-ssl-certificate \
        --global \
        --format="get(name,managed.status, managed.domainStatus)"

Attendre max 30min pour que le LoadBalancer puisse l'utiliser ...
curl -I https://open-id.elhadir.com

## Cloud SQL
# https://www.terraform.io/docs/providers/google/r/sql_database_instance.html

#ano date
docker-machine restart
  
## keycloak
# https://github.com/keycloak/keycloak-containers/blob/10.0.1/server/README.md

# -e JDBC_PARAMS="ssl=false" \

curl -X POST https://open-id.elhadir.com//auth/realms/ws/protocol/openid-connect/token --user ws-pedigree-app:77e59ead-0dde-4691-a577-24e66d74f5f4 -H "content-type: application/x-www-form-urlencoded" -d "username=loe&password=loe&grant_type=password"

# connexion POSTGRES
https://github.com/keycloak/keycloak-containers/blob/master/server/tools/cli/databases/postgres/change-database.cli

# volume
https://stackoverflow.com/questions/57756835/docker-toolbox-volume-mounting-not-working-on-windows-10  
docker-machine ssh default

# cloud run
https://www.terraform.io/docs/providers/google/r/cloud_run_service.html

C:\developpement\data\cloud-run-hello

# cloud build
https://cloud.google.com/cloud-build/docs/automating-builds/run-builds-on-github?hl=fr
https://cloud.google.com/cloud-build/docs/deploying-builds/deploy-cloud-run?hl=fr

# https://phpnews.io/feeditem/google-cloud-build-google-cloud-run-fixing-error-gcloud-run-deploy-permission-denied-the-caller-does-not-have-permission
# Grant the Cloud Run Admin role to the Cloud Build service account
gcloud projects add-iam-policy-binding rugged-shuttle-277619 \
  --member "serviceAccount:895901133514@cloudbuild.gserviceaccount.com" \
  --role roles/run.admin

# Grant the IAM Service Account User role to the Cloud Build service account on the Cloud Run runtime service account
gcloud iam service-accounts add-iam-policy-binding \
  895901133514-compute@developer.gserviceaccount.com \
  --member="serviceAccount:895901133514@cloudbuild.gserviceaccount.com" \
  --role="roles/iam.serviceAccountUser"

# OVH
Domaine a rediriger :
open-id.elhadir.com
www.open-id.elhadir.com
Adresse de destination :
34.107.200.160

#
terraform state rm 'module.postgres_db_user'